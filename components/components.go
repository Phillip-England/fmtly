// Code generated by gtml; DO NOT EDIT.
// +build ignore
// v0.1.0 | you may see errors with types, you'll need to manage your own imports
// type support coming soon!

package components

import "strings"

func gtmlFor[T any](slice []T, callback func(i int, item T) string) string {
var builder strings.Builder
for i, item := range slice {
	builder.WriteString(callback(i, item))
}
return builder.String()
}

func gtmlIf(condition bool, fn func() string) string {
if condition {
	return fn()
}
return ""
}

func gtmlElse(condition bool, fn func() string) string {
if !condition {
	return fn()
}
return ""
}

func gtmlSlot(contentFunc func() string) string {
return contentFunc()
}

func RunePipe(age string) string {
	var builder strings.Builder
	greetingPlaceholder1 := func() string {
		return Greeting(age)
	}
	builder.WriteString(`<div _component="RunePipe" _id="0"><p>Sally is `)
	builder.WriteString(age)
	builder.WriteString(` years old</p>`)
	builder.WriteString(greetingPlaceholder1())
	builder.WriteString(`</div>`)
	return builder.String()
}

func Greeting(age string) string {
	var builder strings.Builder
	builder.WriteString(`<div _component="Greeting" _id="0"><h1>This age was piped in!</h1> <p>`)
	builder.WriteString(age)
	builder.WriteString(`</p></div>`)
	return builder.String()
}

