// Code generated by gtml; DO NOT EDIT.
// +build ignore
// v0.1.0 | you may see errors with types, you'll need to manage your own imports
// type support coming soon!

package components

import "strings"

func gtmlFor[T any](slice []T, callback func(i int, item T) string) string {
var builder strings.Builder
for i, item := range slice {
	builder.WriteString(callback(i, item))
}
return builder.String()
}

func gtmlIf(condition bool, fn func() string) string {
if condition {
	return fn()
}
return ""
}

func gtmlElse(condition bool, fn func() string) string {
if !condition {
	return fn()
}
return ""
}

func gtmlSlot(contentFunc func() string) string {
return contentFunc()
}

func AdminPage(isLoggedIn bool) string {
	var builder strings.Builder
	isLoggedInElse1 := gtmlElse(isLoggedIn, func() string {
		var isLoggedInBuilder strings.Builder
		isLoggedInBuilder.WriteString(`<div _else="isLoggedIn" _id="1"><p>you are not logged in!</p></div>`)
		if !isLoggedIn {
			return isLoggedInBuilder.String()
		}
		return ""
	})
	builder.WriteString(`<div _component="AdminPage" _id="0">`)
	builder.WriteString(isLoggedInElse1)
	builder.WriteString(`</div>`)
	return builder.String()
}

