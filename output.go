// Code generated by gtml; DO NOT EDIT.
// v0.1.0 | you may see errors with types, you'll need to manage your own imports
// type support coming soon!

package main

import "strings"



func gtmlFor[T any](slice []T, callback func(i int, item T) string) string {
	var builder strings.Builder
	for i, item := range slice {
		builder.WriteString(callback(i, item))
	}
	return builder.String()
}

func gtmlIf(condition bool, fn func() string) string {
if condition {
	return fn()
}
	return ""
}

func gtmlElse(condition bool, fn func() string) string {
	if !condition {
		return fn()
	}
	return ""
}

func gtmlSlot(contentFunc func() string) string {
	return contentFunc()
}

func gtmlEscape(input string) string {
	return input
}

func HeaderPlace() string {
	headerplace := func() string {
		var headerplaceBuilder strings.Builder
		headerplaceBuilder.WriteString(`<div _component="HeaderPlace" _id="0"><h1>Hello</h1></div>`)
		return headerplaceBuilder.String()
	}
	return gtmlEscape(headerplace())
}

func Greeting() string {
	greeting := func() string {
		var greetingBuilder strings.Builder
		greetingBuilder.WriteString(`<div _component="Greeting" _id="0"><h1>Hello</h1></div>`)
		return greetingBuilder.String()
	}
	return gtmlEscape(greeting())
}

